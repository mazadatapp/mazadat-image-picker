buildscript {
  repositories {
    google()
    mavenCentral()
    maven { url 'https://maven.google.com' }
    maven { url 'https://jitpack.io' }

  }

  dependencies {
    classpath 'com.android.tools.build:gradle:4.2.2'
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'

if (isNewArchitectureEnabled()) {
  apply plugin: 'com.facebook.react'
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['MazadatImagePicker_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['MazadatImagePicker_' + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault('minSdkVersion')
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
    all {
      buildConfigField "String", "BROADCAST_ACTION", "\"Mazadat-Image-Picker\""
    }
  }

  lintOptions {
    disable 'GradleCompatible'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

}

repositories {
  mavenCentral()
  google()
  maven { url 'https://jitpack.io' }
  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has('reactNativeAndroidRoot')) {
    defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
  } else {
    defaultDir = new File(
      projectDir,
      '/../../../node_modules/react-native/android'
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
        parentDir,
        'node_modules/react-native'
      )

      def androidPrebuiltBinaryDir = new File(
        parentDir,
        'node_modules/react-native/android'
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }


}


dependencies {
  implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation 'com.android.support:appcompat-v7:28.0.0'
  implementation 'com.android.support.constraint:constraint-layout:2.0.4'

  //camera
  api 'com.otaliastudios:cameraview:2.7.2'
  def camerax_version = "1.1.0-beta01"
  implementation "androidx.camera:camera-core:${camerax_version}"
  implementation "androidx.camera:camera-camera2:${camerax_version}"
  implementation "androidx.camera:camera-lifecycle:${camerax_version}"
  implementation "androidx.camera:camera-video:${camerax_version}"

  implementation "androidx.camera:camera-view:${camerax_version}"
  implementation "androidx.camera:camera-extensions:${camerax_version}"

  //recyclerview
  implementation 'androidx.recyclerview:recyclerview:1.2.1'

  //round image view
  implementation 'com.makeramen:roundedimageview:2.3.0'
  implementation 'androidx.appcompat:appcompat:1.6.0'
  implementation 'com.google.android.material:material:1.4.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

  //image orientation
  implementation "com.android.support:exifinterface:28.0.0"

  //android fast networking
  //implementation 'com.github.amitshekhariitbhu.Fast-Android-Networking:android-networking:v1.0.2'
  //zoom
  implementation 'com.jsibbold:zoomage:1.3.1'
  //picasso
  implementation 'com.squareup.picasso:picasso:2.71828'

  //recyclerview
  implementation 'androidx.recyclerview:recyclerview:1.0.0'

  implementation "commons-io:commons-io:2.7"

  implementation 'com.github.yuriy-budiyev:circular-progress-bar:1.2.3'
  implementation 'com.github.bumptech.glide:glide:4.16.0'

  implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'
  implementation 'com.github.MikeOrtiz:TouchImageView:1.4.1'

  implementation 'com.android.support:cardview-v7:+'
// From node_modules
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "MazadatImagePicker"
    codegenJavaPackageName = "com.mazadatimagepicker"
  }
}
